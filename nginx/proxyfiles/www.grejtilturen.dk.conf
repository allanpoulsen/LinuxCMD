server {
   listen 80;
   server_name www.grejtilturen.dk;
   return 301 https://grejtilturen.dk$request_uri;
}

server {
   listen 80 default_server;
   server_name grejtilturen.dk;
   return 301 https://grejtilturen.dk$request_uri;
}

upstream docker_cluster {
	# ip_hash;
        # server dockernode07.lan.local:80;
	server dockerprod.lan.local:1234;
	server p1.lan.local:1234;
	server p2.lan.local:1234;
	server p3.lan.local:1234;
	server p4.lan.local:1234;
	server p5.lan.local:1234;
	server p6.lan.local:1234;
	server 192.168.1.111:80;
}

server {

    listen 443;
    server_name www.grejtilturen.dk;

    ssl_certificate           /etc/letsencrypt/live/grejtilturen.dk/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/grejtilturen.dk/privkey.pem;

    ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

     return 301 https://grejtilturen.dk$request_uri;
}

server {
    listen 443;
    server_name grejtilturen.dk;

    ssl_certificate           /etc/letsencrypt/live/grejtilturen.dk/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/grejtilturen.dk/privkey.pem;

    ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    gzip  on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
    gzip_buffers 16 8k;
    gzip_disable “MSIE [1-6].(?!.*SV1)”;

    access_log  /var/log/nginx/grejtilturen.dk.access.log;
    error_log   /var/log/nginx/grejtilturen.dk.error.log warn;

location / {
    proxy_pass            http://docker_cluster;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection keep-alive;
    proxy_set_header   Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
